{
  "Uuid": "93c463b1-901a-45c3-a540-5d977611f582",
  "IsCustomNode": false,
  "Description": null,
  "Name": "Horizontal Alignment_Segment_Sub_EdgePoints",
  "ElementResolver": {
    "ResolutionMap": {
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      },
      "Autodesk.Curve": {
        "Key": "Autodesk.DesignScript.Geometry.Curve",
        "Value": "ProtoGeometry.dll"
      },
      "Autodesk.DesignScript.Geometry.Curve": {
        "Key": "Autodesk.DesignScript.Geometry.Curve",
        "Value": "ProtoGeometry.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "C:\\Users\\dlagu\\OneDrive\\문서\\GitHub\\DY-Dynamo\\script\\Python\\Sample\\Family.xlsx",
      "InputValue": ".\\Family.xlsx",
      "NodeType": "ExtensionNode",
      "Id": "eaf56a6d1c9e409ebac9c4895e75debd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fcc6f55c746f4dde890da97b4d5d8551",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its filename"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ImportExcel@var,string,bool,bool",
      "Id": "7f470b3aace8422096befebef1b3e3e8",
      "Inputs": [
        {
          "Id": "02205c9d71d1415ca68b6605de69782c",
          "Name": "file",
          "Description": "File representing the Microsoft Excel spreadsheet.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6f547b4b7399403aac60bf49203226ff",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing the data.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e1feb91a8ccf4de58b0503dd34e6f2e5",
          "Name": "readAsStrings",
          "Description": "Toggle to switch between reading Excel file as strings.\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "554518354909452ca42760e02a5297f1",
          "Name": "showExcel",
          "Description": "Toggle to switch between showing and hiding the main Excel window.\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5a7ed799c59147fd9ba2f2b42f130157",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Read data from a Microsoft Excel spreadsheet. Data is read by row and returned in a series of lists by row. Rows and columns are zero-indexed; for example, the value in cell A1 will appear in the data list at [0,0]. This node requires Microsoft Excel to be installed.\n\nData.ImportExcel (file: var, sheetName: string, readAsStrings: bool = false, showExcel: bool = true): var[][]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Alignment",
      "Id": "522e23e3e0a04afbb4cb763d886b5f94",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5c0322e8118941efb8de5d3ef38386ba",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.FileObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "71f3688a9c5443a3b32f316e72059f94",
      "Inputs": [
        {
          "Id": "134f25cfa29c480eb685eb1900a890a3",
          "Name": "path",
          "Description": "Path to the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "74884c361b4b4696880208320b6bfdb0",
          "Name": "file",
          "Description": "File object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a file object from a path."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "c31892694b264009a0acb66410e8ae86",
      "Inputs": [
        {
          "Id": "f4d635d075384bedb4c22b0c8becaa9d",
          "Name": "lists",
          "Description": "A list of lists to be transposed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "76c4cc01e375462e85f671c0eba0e964",
          "Name": "lists",
          "Description": "A list of transposed lists.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RestOfItems@var[]..[]",
      "Id": "234222423cf74675a80b48c647480e5c",
      "Inputs": [
        {
          "Id": "52fc274472554e1db35ebd2982f1aa17",
          "Name": "list",
          "Description": "List to get the rest of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "56289e67b07d4395b459c121800310fe",
          "Name": "rest",
          "Description": "Rest of the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes the first item from the given list.\n\nList.RestOfItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "f87f5af7b6f74703b78d0e05714dfdd1",
      "Inputs": [
        {
          "Id": "7a3e4b0cdb004b16a2e146a91f90a48a",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "663a85fcee1d46e483dec61234024dc2",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "55caa720226c41b8a1850f4d41f62bce",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;\n2;\n3;\n4;",
      "Id": "b2c166d54e2e47349001b14b51cbacdb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8db24a65aae84412af1619fe3b5d5212",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f8cdeadabaa244329995442e8b5b405a",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "61d95ef0ff3a42b79ff072d52111670a",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "71efeb6532e04c7d872fb990c58a6549",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "0e2cabf895a34e8b987c1dede5e0cd05",
      "Inputs": [
        {
          "Id": "806ab2ba09d64360832335696483164e",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "01d54e02f9f842a89074f4a58b89be3c",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "303dc52f208d49ef9f85ba2e1cfa5c9d",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "c704277c410a45df8705bbf108780528",
      "Inputs": [
        {
          "Id": "b5df65a2657a4979ad3fa33c39da5c87",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2b5ad5f786244afb93963b627d56df15",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3f368e9bcac94201b1ca51fd72030f47",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "5880a65430bb481c898de60ba1633232",
      "Inputs": [
        {
          "Id": "5cb474f2ce524bf6b77dc73d06b5ab81",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1cbec8aa22144fb09d71c50cb56546a0",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "54e11214a6de4757864fa3e4df05ef34",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.ByCoordinates@double,double",
      "Id": "7a152c25d959434d9951f59cb900be51",
      "Inputs": [
        {
          "Id": "a1806e33408a47dcb630fcad395a6e8d",
          "Name": "x",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "27a4512f79c74d41bf357382833f352c",
          "Name": "y",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b00ad8e2165b4020b05a139a25d37c7f",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Form a Point in the XY plane given two 2 cartesian coordinates. The Z component is 0.\n\nPoint.ByCoordinates (x: double = 0, y: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ByCoordinates@double,double,double",
      "Id": "cdb03ef52f7543dc9ffcd59f165ff582",
      "Inputs": [
        {
          "Id": "f34a7904d7ca4e748ad65bf0f71ecf59",
          "Name": "x",
          "Description": "X coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5c1cc6af7cd7431787d1b0c7c4cb1fab",
          "Name": "y",
          "Description": "Y coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6ddc9fff715d4b2683be63bce07d29f4",
          "Name": "z",
          "Description": "Z coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e951a41c80b74b58b62b14f82e8f774b",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Form a Vector by 3 Euclidean coordinates\n\nVector.ByCoordinates (x: double = 0, y: double = 0, z: double = 0): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointDirectionLength@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,double",
      "Id": "3a30f6ad8ad440fbb1048db8ff2544d8",
      "Inputs": [
        {
          "Id": "87afa3c04ce64fb596445ac6cb24ed5f",
          "Name": "startPoint",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e190e9a10b3d44fcaa27c81692df970e",
          "Name": "direction",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fdaf4a5dff6d454499094136fadea9e5",
          "Name": "length",
          "Description": "double\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4e7cabbbe5e8482397afd8c8a80dfe2f",
          "Name": "Line",
          "Description": "Line",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a straight Line starting at start Point, extending in Vector direction by specified length.\n\nLine.ByStartPointDirectionLength (startPoint: Point, direction: Vector, length: double = 1): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "20000;",
      "Id": "b2b1da71ea76430aa2b190d528904ddd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cec2e0f1a7e8470b8d15b688831c61d6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Curve.RemoveDuplicates@var[],string[],bool",
      "Id": "60cc74b1f7b148eabb1e9029c794dd34",
      "Inputs": [
        {
          "Id": "7e911b42f8114cafa8638d59298545fb",
          "Name": "curves",
          "Description": "Enter a list of Curves to remove any duplicates. Dynamo Curves, Revit Model Lines or Revit Detail Lines can be input.\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "21a921e14bc442999eddc4e4543181ea",
          "Name": "retainByLineStyles",
          "Description": "Enter LineStyle name(s) to retain the first curve from a set of duplicates that matches the styles. Matches are made in sequence and names are case-sensitive.\n\nstring[]\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ee22270772f64109a6cac7b7dea92534",
          "Name": "deleteRevitCurves",
          "Description": "Set to True to delete the duplicate Revit Curves from the Document.\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0d62fd4196c54e5ebf29c0ba07c5c07c",
          "Name": "cleanedCurves[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2a4614b2d5a642fb9bdcf5758b1ef16a",
          "Name": "duplicateCurves[][]",
          "Description": "Curve[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5d4c570396664adda82bae74db9dc155",
          "Name": "report[]",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes duplicates from a list of Curves. Dynamo Curves, Revit Model or Detail Lines are all supported. Revit Curves can be deleted from the Document. Input LineStyle names to retain curves of that style.\r\rLineStyle list are iterated until a match is found. If no matches are found, first-in first-out rules apply. To simplify model element selection in Revit, heterogeneous lists (any element type) can be input as the list is filtered before processing.\r\rVisit bimorph.com/bimorph-nodes for support\n\nCurve.RemoveDuplicates (curves: var[], retainByLineStyles: string[] = null, deleteRevitCurves: bool = false): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "CAD.CurvesFromCADLayers@Revit.Elements.Element,string[],bool,string[]",
      "Id": "f244f0460f56403498ab2854ea3ec7b8",
      "Inputs": [
        {
          "Id": "065aceaa1d524b34a5dda9a5a662edaa",
          "Name": "importInstance",
          "Description": "Input the ImportInstance to convert to curves.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "baf9377bd6e84a0da48a2f3b6a52f4ae",
          "Name": "layerNames",
          "Description": "Enter the layer names for conversion. Leave unconnected to convert all layers. Names are case-sensitive.\n\nstring[]\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6ebb0e9dcaf54a6f92bdcd261e4593e4",
          "Name": "createModelCurves",
          "Description": "Set to True to convert into Revit Model Lines.\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f7108b8ab991481d91843c82e808a92c",
          "Name": "lineStyleMap",
          "Description": "Enter the LineStyle name to map to each layer. Longest lacing is used by default.\n\nstring[]\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3c80df8fc3294636bd5a2d280a1a7e7e",
          "Name": "Curve[][]",
          "Description": "Curve[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "545c785163bf48c3bfd806e30878e1c7",
          "Name": "layerKeys[]",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Convert curves from a CAD link or import by layer name. Curves are organised into sublists by layer. Enter LineStyle names to map to each layer during conversion.\r\rThe node is optimised to convert curve types that typically fail when using Dynamo Element.Curves node or Revit Explode.\r\rVisit bimorph.com/bimorph-nodes for support.\n\nCAD.CurvesFromCADLayers (importInstance: Element, layerNames: string[] = null, createModelCurves: bool = false, lineStyleMap: string[] = null): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "S-_SEG-----_E-NB",
      "Id": "33fa5906554e4fc9b4330380bdd46a65",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c4db1c9304cf470bb67fb053c42dacd1",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Nodes.DSModelElementSelection, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [
        "de463501-a0f5-4fef-8943-9d91cf38b47c-00001ff5"
      ],
      "Id": "1344f08b3eb94fa69669b72811e2d927",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e37864e3045c49bc83e12c0327e4191f",
          "Name": "Element",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.SetDifference@var[],var[]",
      "Id": "9498172b730645faa8681b4d931b11eb",
      "Inputs": [
        {
          "Id": "fd80f77a984a4df2b231de315ba53ec0",
          "Name": "list1",
          "Description": "List of objects to be included in the new list.\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b6f8ab96c9204e888f55e25915c3ce35",
          "Name": "list2",
          "Description": "List of objects to be excluded in the new list.\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0dcb3b4d4b0446799d31679871028e5d",
          "Name": "newList",
          "Description": "The new list that contains objects in List1 but not in List2.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns a new list that includes objects in List1 but excludes objects in List2.\n\nList.SetDifference (list1: var[], list2: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "20b961fd70b4477fbf76d2ce7b2a0c17",
      "Inputs": [
        {
          "Id": "6e17eebe36c94e898604fafecbbead3d",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "95507f838d4540d4a3c8040fb90d4def",
          "Name": "count",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0..cnt-1;",
      "Id": "1cc5ec8da9a14fea8c7b0930516da760",
      "Inputs": [
        {
          "Id": "ad7ceca93bdd4b37b2d00093e8e1e79d",
          "Name": "cnt",
          "Description": "cnt",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c2eff190d3c54b5584a47213814ade70",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ExportExcel@string,string,int,int,var[][],bool",
      "Id": "bdc0871141f545918d37d619543cd7d4",
      "Inputs": [
        {
          "Id": "95aa37cbab604b6c8afdbdb5df33cb56",
          "Name": "filePath",
          "Description": "File path to the Microsoft Excel spreadsheet.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6fc8408665c7401cb1214199f685e5d3",
          "Name": "sheetName",
          "Description": "Name of the workseet to write data to.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ef119fe07e5e40f3a0f6c5657466e8ab",
          "Name": "startRow",
          "Description": "Start row for writing data. Enter 0 for Row 1, 1 for Row 2, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "38458bb047d84342984e38b73b81025b",
          "Name": "startCol",
          "Description": "Start column for writing data. Enter 0 for Column A, 1 for Column B, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f4b7456f6503418e910f00189b79d190",
          "Name": "data",
          "Description": "Data to write to the spreadsheet.\n\nvar[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "704883ba30cc47abb088d4a0072d68c7",
          "Name": "overWrite",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "19ca4960a9bb45cfb2ece3580dd42b66",
          "Name": "data",
          "Description": "Data written to the spreadsheet.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Write data to a Microsoft Excel spreadsheet. Data is written by row with sublists to be written in successive rows. Rows and columns are zero-indexed; for example, the value in the data list at [0,0] will be written to cell A1. Null values and empty lists are written to Excel as empty cells. This node requires Microsoft Excel to be installed.\n\nData.ExportExcel (filePath: string, sheetName: string, startRow: int, startCol: int, data: var[][], overWrite: bool = false): var[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"General\";\n0;",
      "Id": "a87edeeab96040499a33e9c91a2ff6f1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "363a426ad5084d24a1e874bf01d56fb2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a6a83ab4cc0241b8bc04614f7da62448",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "35e169827f0a482a8cc8346a25a07770",
      "Inputs": [
        {
          "Id": "2f6a54b4ced041c4927052f882aad8d4",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ed0996578dbf49758cb37a391ea39460",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d4ef6ece79f44fdd8e4cf197fa72ac4e",
          "Name": "list",
          "Description": "A list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SubPoint\";",
      "Id": "d00b3fa0e4eb4f7fb2ae51ff310c860a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d076e9ee90d34db29ca7c706767ced54",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "8eef182b819e44a0869e794ee8df5ec7",
      "Inputs": [
        {
          "Id": "149fbe7bca3040269600e83e3e784961",
          "Name": "lists",
          "Description": "A list of lists to be transposed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "96ff619f4f70423286681f2526b12ea4",
          "Name": "lists",
          "Description": "A list of transposed lists.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AddItemToFront@var[]..[],var[]..[]",
      "Id": "8416b13d1b8c4c71aced3bb258c5c883",
      "Inputs": [
        {
          "Id": "e3ad48826504429199bc64f623a9752a",
          "Name": "item",
          "Description": "Item to be added. Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "481af7722ff94c4bac5b9d26eeb7cb94",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8f03e157e51c41e394a3a73f7c66b8c5",
          "Name": "list",
          "Description": "New list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Adds an item to the beginning of a list.\n\nList.AddItemToFront (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "619b3c3483534506873855fc4d9341ae",
      "Inputs": [
        {
          "Id": "842aa6bf6fe5475c82ef1e9cb37b1b39",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4dd34c4deae142c9ae509f7c68948acc",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "035b88c99b584b6d945148fb8eb5d347",
          "Name": "list",
          "Description": "A list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "0611c2f6bdf84bdf959ba79d7b4021c0",
      "Inputs": [
        {
          "Id": "fe155f1e1d85472b8103485e91809210",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bc3bcfae74ef4cab942e63d3c87385ea",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d584f96c6bc347f19a493d94fe06dd53",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Curve.RemoveDuplicates@var[],string[],bool",
      "Id": "1c54985181704641bb0de3a10b839fbf",
      "Inputs": [
        {
          "Id": "85f36aa5afbf4b60b870233870b48b89",
          "Name": "curves",
          "Description": "Enter a list of Curves to remove any duplicates. Dynamo Curves, Revit Model Lines or Revit Detail Lines can be input.\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0440921275514eab9563b134dffa420e",
          "Name": "retainByLineStyles",
          "Description": "Enter LineStyle name(s) to retain the first curve from a set of duplicates that matches the styles. Matches are made in sequence and names are case-sensitive.\n\nstring[]\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ec4a2e0b1be74bf0a24fd654ab368837",
          "Name": "deleteRevitCurves",
          "Description": "Set to True to delete the duplicate Revit Curves from the Document.\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e19421456ed846b39807da58c9d2e877",
          "Name": "cleanedCurves[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "de022bd88740433ca0073af6a889a04a",
          "Name": "duplicateCurves[][]",
          "Description": "Curve[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "60a8ac4018814462a142c7d4355dd4aa",
          "Name": "report[]",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes duplicates from a list of Curves. Dynamo Curves, Revit Model or Detail Lines are all supported. Revit Curves can be deleted from the Document. Input LineStyle names to retain curves of that style.\r\rLineStyle list are iterated until a match is found. If no matches are found, first-in first-out rules apply. To simplify model element selection in Revit, heterogeneous lists (any element type) can be input as the list is filtered before processing.\r\rVisit bimorph.com/bimorph-nodes for support\n\nCurve.RemoveDuplicates (curves: var[], retainByLineStyles: string[] = null, deleteRevitCurves: bool = false): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "CAD.CurvesFromCADLayers@Revit.Elements.Element,string[],bool,string[]",
      "Id": "93a5324019d04b5eb8d00cb2ef84b3b1",
      "Inputs": [
        {
          "Id": "941251ee3902421db1e92c09fed82e95",
          "Name": "importInstance",
          "Description": "Input the ImportInstance to convert to curves.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5bf55be10b3b46e580f655197a0bb407",
          "Name": "layerNames",
          "Description": "Enter the layer names for conversion. Leave unconnected to convert all layers. Names are case-sensitive.\n\nstring[]\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8323259e6b074a84b40c3ce961d57a1b",
          "Name": "createModelCurves",
          "Description": "Set to True to convert into Revit Model Lines.\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d69063cffce54b0f958a8b981d858793",
          "Name": "lineStyleMap",
          "Description": "Enter the LineStyle name to map to each layer. Longest lacing is used by default.\n\nstring[]\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9526eea7b4044b38a02f9463e5b25500",
          "Name": "Curve[][]",
          "Description": "Curve[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "09bea4889ed44917a66a7e791b796d64",
          "Name": "layerKeys[]",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Convert curves from a CAD link or import by layer name. Curves are organised into sublists by layer. Enter LineStyle names to map to each layer during conversion.\r\rThe node is optimised to convert curve types that typically fail when using Dynamo Element.Curves node or Revit Explode.\r\rVisit bimorph.com/bimorph-nodes for support.\n\nCAD.CurvesFromCADLayers (importInstance: Element, layerNames: string[] = null, createModelCurves: bool = false, lineStyleMap: string[] = null): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "InnerEdge_NB",
      "Id": "2954355ab07242aeb1eec0d6ecde5481",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "522e9e459f5e4607ae25210419942ff9",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Curve.IntersectAll@Autodesk.DesignScript.Geometry.Curve[]",
      "Id": "5714a81b7208468fb7851dbe0299afda",
      "Inputs": [
        {
          "Id": "f6b8526883d9446b9777f8008d1dba5a",
          "Name": "curves",
          "Description": "Input a list of Curves to intersect.\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "90c729c2e4b043faab79b2199ee79616",
          "Name": "Point[]",
          "Description": "Point[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Finds and returns all intersection points between a set of curves and highly optimised for rapid results.\r\rVisit bimorph.com/bimorph-nodes for support\n\nCurve.IntersectAll (curves: Curve[]): Point[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Curve.IntersectAll@Autodesk.DesignScript.Geometry.Curve[]",
      "Id": "2520e2a6025a4205928bb3ec13b70d15",
      "Inputs": [
        {
          "Id": "140a27aa5aef4ebaa3948762a02f4d3a",
          "Name": "curves",
          "Description": "Input a list of Curves to intersect.\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "740dc20e6bea44eba2c5430c818a8a03",
          "Name": "Point[]",
          "Description": "Point[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Finds and returns all intersection points between a set of curves and highly optimised for rapid results.\r\rVisit bimorph.com/bimorph-nodes for support\n\nCurve.IntersectAll (curves: Curve[]): Point[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "442be450261e46ff81bbd3881db3de17",
      "Inputs": [
        {
          "Id": "3b37e9b21c8942d093775a98f0b6da1c",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "2abe1f056a234a16968840749e51b359",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6fb2828e7ab74526b5fa6f0b9a76d7f3",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AddItemToEnd@var[]..[],var[]..[]",
      "Id": "fab82ae26f8542f596ced2c3263e8b35",
      "Inputs": [
        {
          "Id": "a5b30615fab048208546eb7442b1f9ee",
          "Name": "item",
          "Description": "Item to be added.Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a4a6838d077c48fdad2ea60d1a1f8be7",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4916c8bd042a4eb08bdf400367681bbe",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Adds an item to the end of a list.\n\nList.AddItemToEnd (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "987687951f5043e38d07c55427ea2365",
      "Inputs": [
        {
          "Id": "63b9bde4e19c44b79322c2e87498cfbd",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "f5bc468abdc940ae9510fb1adae61f2d",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7b06b94f0771405eadfa61eedabd352a",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "pass?data:\"\";",
      "Id": "fa9302c5a7d44e7d9830aa50a9139b7b",
      "Inputs": [
        {
          "Id": "7033d93a46c6485db5342f105d45578e",
          "Name": "pass",
          "Description": "pass",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4e97143de73f4502b09747afa443ee00",
          "Name": "data",
          "Description": "data",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c41a46799d3e456792383fc32db6cc24",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "67b6ff391b3f471faba5d1474345b216",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4ac2d4cfd46144dcb9f97314b4131b47",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "bebf11c609d247f4844012075b27da59",
      "Inputs": [
        {
          "Id": "c2283f25ba734b2ca6850e23b8203d7d",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "806128e702f24da39a11da2f6c6bcb04",
          "Name": "count",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a[0]==a[1];",
      "Id": "c299584798a840bdbb0c72b6d4ebbbf7",
      "Inputs": [
        {
          "Id": "e50d52280f484ac09680c03168cd21ef",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0411dbbf7c0346dd99ee79155cf4ac32",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "List.AllTrue(cond)==true?\"Pass\":\"Data Index is not equal\";",
      "Id": "8b992cddc2bc40d989949104f1b8938b",
      "Inputs": [
        {
          "Id": "1f582db9561740cf903f54ba403619b1",
          "Name": "cond",
          "Description": "cond",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "31b8915711944da6a01ea41e27e0b713",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "c0ac71a5ac8541e2a3ba483a1f2e21af",
      "Inputs": [
        {
          "Id": "73e6727d8ef145ec9edc7c6ababe150c",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ea1939431145436da4e09cbedb5249ef",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "1344c16ec634402c8f6cfec402f75db2",
      "Inputs": [
        {
          "Id": "931f742583f94b01b6ed6645eeb419ed",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5f6ff90e509049e5b3c666ccd9225606",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5f442643b520497db1ab551dbc04705a",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DistanceTo@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "d0e26b8e0fb346e88e13d51d84f3e777",
      "Inputs": [
        {
          "Id": "9053975e229e4f47bae49692ad32e0e5",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e68c1c9bea224439a085f15508691446",
          "Name": "other",
          "Description": "The other Geometry\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eff377a711e14dd096f26f869ba13c49",
          "Name": "double",
          "Description": "The distance",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain the distance from this Geometry to another\n\nGeometry.DistanceTo (other: Geometry): double"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "b3aa513f0c4d41bfa92c4c9de246b51d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a4f35ee15bc24af2ab5f070a327bb374",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "isInner?\"InnerEdge\":\"OuterEdge\";",
      "Id": "99184e5fa5454cd1b97ce0cc71884ae0",
      "Inputs": [
        {
          "Id": "6a7ea8d0cf09483e86ad84dc5fedd88b",
          "Name": "isInner",
          "Description": "isInner",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9c60ac53338d4476a26aa22196750397",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ImportExcel@var,string,bool,bool",
      "Id": "261702e5293f4a10a9f282d0ff8980f7",
      "Inputs": [
        {
          "Id": "38da4da86dea45ab91da93856dc91781",
          "Name": "file",
          "Description": "File representing the Microsoft Excel spreadsheet.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "05283fdcd93a4df3ae86e0b76d68473a",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing the data.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0ef33ae11e1d440185d7bfa738ea8a57",
          "Name": "readAsStrings",
          "Description": "Toggle to switch between reading Excel file as strings.\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3818b3592f334360845cad915bdc7e12",
          "Name": "showExcel",
          "Description": "Toggle to switch between showing and hiding the main Excel window.\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4f588a1cc8664d8ab09262c0767f8091",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Read data from a Microsoft Excel spreadsheet. Data is read by row and returned in a series of lists by row. Rows and columns are zero-indexed; for example, the value in cell A1 will appear in the data list at [0,0]. This node requires Microsoft Excel to be installed.\n\nData.ImportExcel (file: var, sheetName: string, readAsStrings: bool = false, showExcel: bool = true): var[][]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "General",
      "Id": "1740c521be984122ab9f33c91ae09b31",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "267585e1197d4528b7707d4d21035022",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "7469503b9962442c93203809cfb02979",
      "Inputs": [
        {
          "Id": "9a32f453c8ad4828b3f483e5e2412df4",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6fa457f47ccf4f07b72054ef58b80c77",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "45580d522793460083a7b124a9e7eee2",
      "Inputs": [
        {
          "Id": "3f20ed5dba834c48975c66ac4de27164",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3b654a32dd774370a8e98dcb2b09757b",
          "Name": "count",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "list = IN[0]\r\nset = []\r\nfor i in list:\r\n\tif len(i) == 1:\r\n\t\tset.append(i[0])\r\n\telse:\r\n\t\tset.append(None)\r\n\r\nOUT = set",
      "VariableInputPorts": true,
      "Id": "2f38ac87c69d49b78f6e2094bc6726ad",
      "Inputs": [
        {
          "Id": "fe8c0d1a7899439fb674247e43980981",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c7f853e9c7d742afb2854425658476c0",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Curve.RemoveDuplicates@var[],string[],bool",
      "Id": "c79db6dffa954b0e9c8db8476daa4b14",
      "Inputs": [
        {
          "Id": "6c8ac51954cc4ee1ad516db411fa5e15",
          "Name": "curves",
          "Description": "Enter a list of Curves to remove any duplicates. Dynamo Curves, Revit Model Lines or Revit Detail Lines can be input.\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4aa4606c935f4cd98706011c54844c9b",
          "Name": "retainByLineStyles",
          "Description": "Enter LineStyle name(s) to retain the first curve from a set of duplicates that matches the styles. Matches are made in sequence and names are case-sensitive.\n\nstring[]\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a8e03f5c49de47d8a6491dfd9badab19",
          "Name": "deleteRevitCurves",
          "Description": "Set to True to delete the duplicate Revit Curves from the Document.\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8a7835872c2e408584545f11bc800456",
          "Name": "cleanedCurves[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2126218d4fc54bd0907838c8d885fe17",
          "Name": "duplicateCurves[][]",
          "Description": "Curve[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b08e4406756145c5b4128e97c97352a0",
          "Name": "report[]",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes duplicates from a list of Curves. Dynamo Curves, Revit Model or Detail Lines are all supported. Revit Curves can be deleted from the Document. Input LineStyle names to retain curves of that style.\r\rLineStyle list are iterated until a match is found. If no matches are found, first-in first-out rules apply. To simplify model element selection in Revit, heterogeneous lists (any element type) can be input as the list is filtered before processing.\r\rVisit bimorph.com/bimorph-nodes for support\n\nCurve.RemoveDuplicates (curves: var[], retainByLineStyles: string[] = null, deleteRevitCurves: bool = false): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "CAD.CurvesFromCADLayers@Revit.Elements.Element,string[],bool,string[]",
      "Id": "5cd7e4cf496d4328b565e7f1fa8ea290",
      "Inputs": [
        {
          "Id": "d5a3a63dcffe4092b91a5e3d6239539a",
          "Name": "importInstance",
          "Description": "Input the ImportInstance to convert to curves.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eab23b3842234a4d8a4b134fe2acc7ba",
          "Name": "layerNames",
          "Description": "Enter the layer names for conversion. Leave unconnected to convert all layers. Names are case-sensitive.\n\nstring[]\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d2899ce5ce7245459a928007f220c38e",
          "Name": "createModelCurves",
          "Description": "Set to True to convert into Revit Model Lines.\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "76dd7f2cfb6643a9a3e2b4d0b806f33c",
          "Name": "lineStyleMap",
          "Description": "Enter the LineStyle name to map to each layer. Longest lacing is used by default.\n\nstring[]\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0b82a83d9d0943b8b8e2c86175b8c732",
          "Name": "Curve[][]",
          "Description": "Curve[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e4bc8f55961e4abba82f755366a5bc0b",
          "Name": "layerKeys[]",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Convert curves from a CAD link or import by layer name. Curves are organised into sublists by layer. Enter LineStyle names to map to each layer during conversion.\r\rThe node is optimised to convert curve types that typically fail when using Dynamo Element.Curves node or Revit Explode.\r\rVisit bimorph.com/bimorph-nodes for support.\n\nCAD.CurvesFromCADLayers (importInstance: Element, layerNames: string[] = null, createModelCurves: bool = false, lineStyleMap: string[] = null): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "PlacementCurve_NB",
      "Id": "c3de72aaf1fe42db8540716e938b74bf",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7c3faad9edc44151808285cb905f38d5",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.ByJoinedCurves@Autodesk.DesignScript.Geometry.Curve[],double",
      "Id": "5729df159ce4463787f6eda25cdaae9a",
      "Inputs": [
        {
          "Id": "1c00b313d66c4a90b946a49bbef072e4",
          "Name": "curves",
          "Description": "Curves to join into polycurve\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "92a8db7e579d4f00bf6646b413bd31c7",
          "Name": "joinTolerance",
          "Description": "Tolerance to determine size of gap allowed between curves to be joined\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "be58e4c545314d9a899d1344500b19fe",
          "Name": "PolyCurve",
          "Description": "PolyCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Make PolyCurve by joining curves. Flips curve as needed for connectivity. Choose a preferred join tolerance between 1e-6 and 1e-3 units.\n\nPolyCurve.ByJoinedCurves (curves: Curve[], joinTolerance: double = 0.001): PolyCurve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Curve.IntersectAll@Autodesk.DesignScript.Geometry.Curve[]",
      "Id": "7062e0edf7e94508a19744a14d92b9b7",
      "Inputs": [
        {
          "Id": "4deef35221824c0d811191932bab0ddc",
          "Name": "curves",
          "Description": "Input a list of Curves to intersect.\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c691d061e583451fbab50903113d02d9",
          "Name": "Point[]",
          "Description": "Point[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Finds and returns all intersection points between a set of curves and highly optimised for rapid results.\r\rVisit bimorph.com/bimorph-nodes for support\n\nCurve.IntersectAll (curves: Curve[]): Point[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AddItemToEnd@var[]..[],var[]..[]",
      "Id": "4307405504cb46d9bb167e7709116675",
      "Inputs": [
        {
          "Id": "b2295a35c0df43e9b9730a08b6bbe07e",
          "Name": "item",
          "Description": "Item to be added.Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "31147167e3b9409da30a2a16eaf45c03",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5da0727fc0ff42faad181939eae032e0",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Adds an item to the end of a list.\n\nList.AddItemToEnd (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "3e1b8198d4f14b66943d33d42ca1c8af",
      "Inputs": [
        {
          "Id": "bce1a3270701431888169183723050c0",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "11e9e758157b4f159bf810fbd3379f12",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "88ca2a94a144498490d05636fc5beaad",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "390bf38a5e8c45048a8b2a1b7672a1cf",
      "Inputs": [
        {
          "Id": "301dd8345eb4413481a7a574cd02be00",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "9ccd64638ba44fd1bb89b3c2a94b38e4",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f791c258c9524ede905a027ecf7605fa",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Curve.IntersectAll@Autodesk.DesignScript.Geometry.Curve[]",
      "Id": "160afff69e9f49d28b08e84d24b69b40",
      "Inputs": [
        {
          "Id": "8c16ad16575b42cdacd05b61059c7b03",
          "Name": "curves",
          "Description": "Input a list of Curves to intersect.\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4b51fd774ea64ba6aa861c3573383169",
          "Name": "Point[]",
          "Description": "Point[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Finds and returns all intersection points between a set of curves and highly optimised for rapid results.\r\rVisit bimorph.com/bimorph-nodes for support\n\nCurve.IntersectAll (curves: Curve[]): Point[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.SetDifference@var[],var[]",
      "Id": "6dfb4e540a5344f2aff00e460c7ee625",
      "Inputs": [
        {
          "Id": "5a00aa75503f436ab0d4b37c705e5bc2",
          "Name": "list1",
          "Description": "List of objects to be included in the new list.\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b639a99271e94664a2eb418402f35264",
          "Name": "list2",
          "Description": "List of objects to be excluded in the new list.\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6da166181b5e4f0790c33f77799824f5",
          "Name": "newList",
          "Description": "The new list that contains objects in List1 but not in List2.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns a new list that includes objects in List1 but excludes objects in List2.\n\nList.SetDifference (list1: var[], list2: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.SortByKey@var[]..[],var[]..[]",
      "Id": "588c2ff96ed344c49d2e2406e3f9fdab",
      "Inputs": [
        {
          "Id": "6f080b83e3004ecb8617a623aa432fb2",
          "Name": "list",
          "Description": "list to be sorted\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "21d1b0729f4c4e9690ee951860b89523",
          "Name": "keys",
          "Description": "list of keys\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fde7b81f7fd54a1b8945510d48335c8b",
          "Name": "sorted list",
          "Description": "sorted list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9d9ed31cbb304cd3b69d888d8f69a7cf",
          "Name": "sorted keys",
          "Description": "sorted keys",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sort list based on its keys\n\nList.SortByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.ParameterAtPoint@Autodesk.DesignScript.Geometry.Point",
      "Id": "acb0e3f31b334fcdad4cfca140d1c8b7",
      "Inputs": [
        {
          "Id": "cf0ef1b89e4940dfb83b071583c6b6ee",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "ad54cd61f2b9472e8c91d1cba5768419",
          "Name": "point",
          "Description": "A Point along or near the Curve\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e07ad17fa5b84e7dab1a73c88f10b084",
          "Name": "double",
          "Description": "The closest parameter along the curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the parameter at a particular point along the Curve\n\nCurve.ParameterAtPoint (point: Point): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "42df284bfdc64e12b7d7a8381b0c0630",
      "Inputs": [
        {
          "Id": "c03f8adc9cd7403f878376d6511f5442",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d780445c21864851b52869e31cbd90b1",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "70a01093f106403e9e131e0ea6ea187c",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    }
  ],
  "Connectors": [
    {
      "Start": "fcc6f55c746f4dde890da97b4d5d8551",
      "End": "134f25cfa29c480eb685eb1900a890a3",
      "Id": "f455989ae8044790a20f4ec9b6997936"
    },
    {
      "Start": "fcc6f55c746f4dde890da97b4d5d8551",
      "End": "95aa37cbab604b6c8afdbdb5df33cb56",
      "Id": "d39c0830ad284047bd17c896c7404f7d"
    },
    {
      "Start": "5a7ed799c59147fd9ba2f2b42f130157",
      "End": "52fc274472554e1db35ebd2982f1aa17",
      "Id": "3693532a37a447d1b82d33dad2b93a11"
    },
    {
      "Start": "5c0322e8118941efb8de5d3ef38386ba",
      "End": "6f547b4b7399403aac60bf49203226ff",
      "Id": "b3d6716a9dac4f7a9a8279d392ce4225"
    },
    {
      "Start": "74884c361b4b4696880208320b6bfdb0",
      "End": "02205c9d71d1415ca68b6605de69782c",
      "Id": "cdd06c0b9bbe46e7bf9ca71f2a614d2f"
    },
    {
      "Start": "74884c361b4b4696880208320b6bfdb0",
      "End": "38da4da86dea45ab91da93856dc91781",
      "Id": "46e74d6bf3d94609bffbb34880e8f5ff"
    },
    {
      "Start": "76c4cc01e375462e85f671c0eba0e964",
      "End": "7a3e4b0cdb004b16a2e146a91f90a48a",
      "Id": "5dae07d9fb6e40ae9b38b4b5cc979bdb"
    },
    {
      "Start": "76c4cc01e375462e85f671c0eba0e964",
      "End": "806ab2ba09d64360832335696483164e",
      "Id": "4dfadd0a0e114e5384ae5b3da4d3bc34"
    },
    {
      "Start": "76c4cc01e375462e85f671c0eba0e964",
      "End": "b5df65a2657a4979ad3fa33c39da5c87",
      "Id": "fe2cc63b718041148ebc5e9a22bb7d67"
    },
    {
      "Start": "76c4cc01e375462e85f671c0eba0e964",
      "End": "5cb474f2ce524bf6b77dc73d06b5ab81",
      "Id": "f4800fd3436e4108a25f5e5ccd971f5d"
    },
    {
      "Start": "56289e67b07d4395b459c121800310fe",
      "End": "f4d635d075384bedb4c22b0c8becaa9d",
      "Id": "77239f3388aa420cbdc01c933ce549f6"
    },
    {
      "Start": "55caa720226c41b8a1850f4d41f62bce",
      "End": "a1806e33408a47dcb630fcad395a6e8d",
      "Id": "a8c4b59757b844648a57432e0f654ec2"
    },
    {
      "Start": "8db24a65aae84412af1619fe3b5d5212",
      "End": "663a85fcee1d46e483dec61234024dc2",
      "Id": "fb8292a60d204496b14fc21c00065379"
    },
    {
      "Start": "f8cdeadabaa244329995442e8b5b405a",
      "End": "01d54e02f9f842a89074f4a58b89be3c",
      "Id": "2bfdb1a02118468883435a687258b1ec"
    },
    {
      "Start": "61d95ef0ff3a42b79ff072d52111670a",
      "End": "2b5ad5f786244afb93963b627d56df15",
      "Id": "558afb0ae28240b198da221f5790f70b"
    },
    {
      "Start": "71efeb6532e04c7d872fb990c58a6549",
      "End": "1cbec8aa22144fb09d71c50cb56546a0",
      "Id": "ded92893885741619cc0573ad4778433"
    },
    {
      "Start": "303dc52f208d49ef9f85ba2e1cfa5c9d",
      "End": "27a4512f79c74d41bf357382833f352c",
      "Id": "8a4f88b5048e48e8b0a1a2805c870e80"
    },
    {
      "Start": "3f368e9bcac94201b1ca51fd72030f47",
      "End": "f34a7904d7ca4e748ad65bf0f71ecf59",
      "Id": "f8d2be11e11e48a49e48a7e7119afd5d"
    },
    {
      "Start": "54e11214a6de4757864fa3e4df05ef34",
      "End": "5c1cc6af7cd7431787d1b0c7c4cb1fab",
      "Id": "45f153b76d0045d284543fea225f8b31"
    },
    {
      "Start": "b00ad8e2165b4020b05a139a25d37c7f",
      "End": "87afa3c04ce64fb596445ac6cb24ed5f",
      "Id": "d4c75fe37090492f98bce73a93e22c85"
    },
    {
      "Start": "b00ad8e2165b4020b05a139a25d37c7f",
      "End": "9053975e229e4f47bae49692ad32e0e5",
      "Id": "9e2dde53039e49f581f83d23d42f6bf5"
    },
    {
      "Start": "b00ad8e2165b4020b05a139a25d37c7f",
      "End": "6e17eebe36c94e898604fafecbbead3d",
      "Id": "da96a87231914010b45b7a0ca908e931"
    },
    {
      "Start": "e951a41c80b74b58b62b14f82e8f774b",
      "End": "e190e9a10b3d44fcaa27c81692df970e",
      "Id": "d90df501a6fe40d3a7835d95f8199285"
    },
    {
      "Start": "cec2e0f1a7e8470b8d15b688831c61d6",
      "End": "fdaf4a5dff6d454499094136fadea9e5",
      "Id": "447fa03c069c49768917b1a267cfe02d"
    },
    {
      "Start": "0d62fd4196c54e5ebf29c0ba07c5c07c",
      "End": "3b37e9b21c8942d093775a98f0b6da1c",
      "Id": "9d5ad4feb868489a8dbe437776dad6b6"
    },
    {
      "Start": "3c80df8fc3294636bd5a2d280a1a7e7e",
      "End": "7e911b42f8114cafa8638d59298545fb",
      "Id": "fdb422062cf54973886a2c10ad80d59a"
    },
    {
      "Start": "c4db1c9304cf470bb67fb053c42dacd1",
      "End": "baf9377bd6e84a0da48a2f3b6a52f4ae",
      "Id": "4044a9d87de44944bbdb784c71d3f422"
    },
    {
      "Start": "e37864e3045c49bc83e12c0327e4191f",
      "End": "065aceaa1d524b34a5dda9a5a662edaa",
      "Id": "82da4b55162e4dbdae6f0ccdc379146b"
    },
    {
      "Start": "e37864e3045c49bc83e12c0327e4191f",
      "End": "941251ee3902421db1e92c09fed82e95",
      "Id": "fdb80f62e03c42d1b06119e2f8cf801c"
    },
    {
      "Start": "e37864e3045c49bc83e12c0327e4191f",
      "End": "d5a3a63dcffe4092b91a5e3d6239539a",
      "Id": "f59c559e2d3b4d87bbffd6fd6e422ae0"
    },
    {
      "Start": "0dcb3b4d4b0446799d31679871028e5d",
      "End": "fe8c0d1a7899439fb674247e43980981",
      "Id": "e1ddad06da9e496cb99740dc43ba4aae"
    },
    {
      "Start": "95507f838d4540d4a3c8040fb90d4def",
      "End": "ad7ceca93bdd4b37b2d00093e8e1e79d",
      "Id": "d3aebf97098b4cf2a4448807f6388ade"
    },
    {
      "Start": "c2eff190d3c54b5584a47213814ade70",
      "End": "2f6a54b4ced041c4927052f882aad8d4",
      "Id": "97d5e89091bd4912a43fbcfc12edb74e"
    },
    {
      "Start": "363a426ad5084d24a1e874bf01d56fb2",
      "End": "6fc8408665c7401cb1214199f685e5d3",
      "Id": "c3e3a95e21474e99975c985b4bbe0483"
    },
    {
      "Start": "a6a83ab4cc0241b8bc04614f7da62448",
      "End": "4e97143de73f4502b09747afa443ee00",
      "Id": "926574a60fcd413d872e16bdf043f96a"
    },
    {
      "Start": "d4ef6ece79f44fdd8e4cf197fa72ac4e",
      "End": "149fbe7bca3040269600e83e3e784961",
      "Id": "28f2e38d8edf471bb35e86fe5b9a080d"
    },
    {
      "Start": "d4ef6ece79f44fdd8e4cf197fa72ac4e",
      "End": "c2283f25ba734b2ca6850e23b8203d7d",
      "Id": "3d08083f713943ea93ab0a20400c3a62"
    },
    {
      "Start": "d076e9ee90d34db29ca7c706767ced54",
      "End": "842aa6bf6fe5475c82ef1e9cb37b1b39",
      "Id": "3d7f29698ed6445aa2e11d683700b53c"
    },
    {
      "Start": "96ff619f4f70423286681f2526b12ea4",
      "End": "481af7722ff94c4bac5b9d26eeb7cb94",
      "Id": "348477a12d874335b0c575cefdcd21d1"
    },
    {
      "Start": "8f03e157e51c41e394a3a73f7c66b8c5",
      "End": "f4b7456f6503418e910f00189b79d190",
      "Id": "2f3de96552e34acbb46aa4552131bdc8"
    },
    {
      "Start": "035b88c99b584b6d945148fb8eb5d347",
      "End": "e3ad48826504429199bc64f623a9752a",
      "Id": "d2914c8a2d104671a863ba3c178e85ec"
    },
    {
      "Start": "d584f96c6bc347f19a493d94fe06dd53",
      "End": "f6b8526883d9446b9777f8008d1dba5a",
      "Id": "a2425ebd91804814a370c8993ba2c035"
    },
    {
      "Start": "d584f96c6bc347f19a493d94fe06dd53",
      "End": "a5b30615fab048208546eb7442b1f9ee",
      "Id": "611f2691851d4aac8620e1d8fbcedd3e"
    },
    {
      "Start": "e19421456ed846b39807da58c9d2e877",
      "End": "fe155f1e1d85472b8103485e91809210",
      "Id": "c6e1f1d00dbb44589585a3cf1771ac8a"
    },
    {
      "Start": "9526eea7b4044b38a02f9463e5b25500",
      "End": "85f36aa5afbf4b60b870233870b48b89",
      "Id": "dc7c8ac8896f481db09bfa066a6a1820"
    },
    {
      "Start": "522e9e459f5e4607ae25210419942ff9",
      "End": "5bf55be10b3b46e580f655197a0bb407",
      "Id": "3538f3f8bb7e42e980efae60fd51bfc7"
    },
    {
      "Start": "90c729c2e4b043faab79b2199ee79616",
      "End": "b6f8ab96c9204e888f55e25915c3ce35",
      "Id": "6ebf045523904eacb79b23c6b9feec90"
    },
    {
      "Start": "740dc20e6bea44eba2c5430c818a8a03",
      "End": "fd80f77a984a4df2b231de315ba53ec0",
      "Id": "27383b0ce5f64b8c821a46150c19ef42"
    },
    {
      "Start": "6fb2828e7ab74526b5fa6f0b9a76d7f3",
      "End": "a4a6838d077c48fdad2ea60d1a1f8be7",
      "Id": "2289cf79760845a1ad5a0c61bdcd9c26"
    },
    {
      "Start": "6fb2828e7ab74526b5fa6f0b9a76d7f3",
      "End": "31147167e3b9409da30a2a16eaf45c03",
      "Id": "baacb751fe0245bf86cde611ab3690af"
    },
    {
      "Start": "4916c8bd042a4eb08bdf400367681bbe",
      "End": "63b9bde4e19c44b79322c2e87498cfbd",
      "Id": "c16b5ff795dc4f1b89ae1c7357e0efa9"
    },
    {
      "Start": "7b06b94f0771405eadfa61eedabd352a",
      "End": "140a27aa5aef4ebaa3948762a02f4d3a",
      "Id": "5163b14bc5424db5b03256bdcc48cb43"
    },
    {
      "Start": "c41a46799d3e456792383fc32db6cc24",
      "End": "ef119fe07e5e40f3a0f6c5657466e8ab",
      "Id": "3ea2958610b54f51a5c457cb90bc440d"
    },
    {
      "Start": "4ac2d4cfd46144dcb9f97314b4131b47",
      "End": "7033d93a46c6485db5342f105d45578e",
      "Id": "055f8ab3ceb94a68aaae6118b0ea155b"
    },
    {
      "Start": "806128e702f24da39a11da2f6c6bcb04",
      "End": "e50d52280f484ac09680c03168cd21ef",
      "Id": "3f6116aa5d634ff78596e90d129fe889"
    },
    {
      "Start": "0411dbbf7c0346dd99ee79155cf4ac32",
      "End": "1f582db9561740cf903f54ba403619b1",
      "Id": "ed3cfe19d23b4884912da72e5feb6ebd"
    },
    {
      "Start": "31b8915711944da6a01ea41e27e0b713",
      "End": "73e6727d8ef145ec9edc7c6ababe150c",
      "Id": "9d9145de87b143249abf99469d1bd86d"
    },
    {
      "Start": "5f442643b520497db1ab551dbc04705a",
      "End": "ad54cd61f2b9472e8c91d1cba5768419",
      "Id": "7ff83baea4634a98a9fd0605a8ca3c90"
    },
    {
      "Start": "eff377a711e14dd096f26f869ba13c49",
      "End": "ed0996578dbf49758cb37a391ea39460",
      "Id": "0818dfee02e340fba8bf7b2668404a21"
    },
    {
      "Start": "a4f35ee15bc24af2ab5f070a327bb374",
      "End": "6a7ea8d0cf09483e86ad84dc5fedd88b",
      "Id": "8cffa1a6f9eb4f378ad9ae8f58faa351"
    },
    {
      "Start": "9c60ac53338d4476a26aa22196750397",
      "End": "4dd34c4deae142c9ae509f7c68948acc",
      "Id": "d43d7cebe1b84ab8a08f2ecf44bc8c72"
    },
    {
      "Start": "4f588a1cc8664d8ab09262c0767f8091",
      "End": "9a32f453c8ad4828b3f483e5e2412df4",
      "Id": "22613fd33cd14441a00ea63b37584db6"
    },
    {
      "Start": "267585e1197d4528b7707d4d21035022",
      "End": "05283fdcd93a4df3ae86e0b76d68473a",
      "Id": "11530d3a9a3e4576984f6b434a2e7214"
    },
    {
      "Start": "6fa457f47ccf4f07b72054ef58b80c77",
      "End": "3f20ed5dba834c48975c66ac4de27164",
      "Id": "ec2f0f5e11cd417d8393e0b2d15650db"
    },
    {
      "Start": "3b654a32dd774370a8e98dcb2b09757b",
      "End": "38458bb047d84342984e38b73b81025b",
      "Id": "788c93056bec45cd81494669899a7a04"
    },
    {
      "Start": "c7f853e9c7d742afb2854425658476c0",
      "End": "6f080b83e3004ecb8617a623aa432fb2",
      "Id": "201539dd10ba4a1c86a525a35e10ffc7"
    },
    {
      "Start": "8a7835872c2e408584545f11bc800456",
      "End": "1c00b313d66c4a90b946a49bbef072e4",
      "Id": "e59ee6ca27304f3abc1c51cd68504946"
    },
    {
      "Start": "8a7835872c2e408584545f11bc800456",
      "End": "bce1a3270701431888169183723050c0",
      "Id": "a43c337b79644b5bbb142cbf5c7859fe"
    },
    {
      "Start": "0b82a83d9d0943b8b8e2c86175b8c732",
      "End": "6c8ac51954cc4ee1ad516db411fa5e15",
      "Id": "84197d74b92640369a55684e76ca5bbc"
    },
    {
      "Start": "7c3faad9edc44151808285cb905f38d5",
      "End": "eab23b3842234a4d8a4b134fe2acc7ba",
      "Id": "332fd4fda235443aba2443d9f9923fd5"
    },
    {
      "Start": "be58e4c545314d9a899d1344500b19fe",
      "End": "cf0ef1b89e4940dfb83b071583c6b6ee",
      "Id": "16703e73aa45447e8a2c6f0c042ef023"
    },
    {
      "Start": "c691d061e583451fbab50903113d02d9",
      "End": "b639a99271e94664a2eb418402f35264",
      "Id": "bcf996a321774f8c989d166a8b15955d"
    },
    {
      "Start": "5da0727fc0ff42faad181939eae032e0",
      "End": "301dd8345eb4413481a7a574cd02be00",
      "Id": "81f173432ec14f4db1c8693d382d0c55"
    },
    {
      "Start": "88ca2a94a144498490d05636fc5beaad",
      "End": "b2295a35c0df43e9b9730a08b6bbe07e",
      "Id": "cbd67fcb5d2f400bad5599a692039dc1"
    },
    {
      "Start": "88ca2a94a144498490d05636fc5beaad",
      "End": "4deef35221824c0d811191932bab0ddc",
      "Id": "f89b4d470ab1434fa305aee4d92220f9"
    },
    {
      "Start": "f791c258c9524ede905a027ecf7605fa",
      "End": "8c16ad16575b42cdacd05b61059c7b03",
      "Id": "de133e3ca4be4673897d4b48aea05a52"
    },
    {
      "Start": "4b51fd774ea64ba6aa861c3573383169",
      "End": "5a00aa75503f436ab0d4b37c705e5bc2",
      "Id": "a3e5a72e36fd4a88b4270daa17a1af04"
    },
    {
      "Start": "6da166181b5e4f0790c33f77799824f5",
      "End": "931f742583f94b01b6ed6645eeb419ed",
      "Id": "d24d15c6657d4ed9b31b5d1a96a06dbd"
    },
    {
      "Start": "fde7b81f7fd54a1b8945510d48335c8b",
      "End": "e68c1c9bea224439a085f15508691446",
      "Id": "6cef9d420d844d269cfa3c0317604333"
    },
    {
      "Start": "e07ad17fa5b84e7dab1a73c88f10b084",
      "End": "c03f8adc9cd7403f878376d6511f5442",
      "Id": "35c7020028674a3894951f08cb20fd4b"
    },
    {
      "Start": "70a01093f106403e9e131e0ea6ea187c",
      "End": "21d1b0729f4c4e9690ee951860b89523",
      "Id": "e28a4b9996844626aea2edcb8d8a5227"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [
    {
      "Name": "bimorphNodes",
      "Version": "3.0.3",
      "ReferenceType": "Package",
      "Nodes": [
        "60cc74b1f7b148eabb1e9029c794dd34",
        "f244f0460f56403498ab2854ea3ec7b8",
        "1c54985181704641bb0de3a10b839fbf",
        "93a5324019d04b5eb8d00cb2ef84b3b1",
        "5714a81b7208468fb7851dbe0299afda",
        "2520e2a6025a4205928bb3ec13b70d15",
        "c79db6dffa954b0e9c8db8476daa4b14",
        "5cd7e4cf496d4328b565e7f1fa8ea290",
        "7062e0edf7e94508a19744a14d92b9b7",
        "160afff69e9f49d28b08e84d24b69b40"
      ]
    }
  ],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 100.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.3.1.11775",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "File Path",
        "Id": "eaf56a6d1c9e409ebac9c4895e75debd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -594.86731019312913,
        "Y": 353.79072094892882
      },
      {
        "ShowGeometry": true,
        "Name": "Data.ImportExcel",
        "Id": "7f470b3aace8422096befebef1b3e3e8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 136.88813598322122,
        "Y": 345.55143021000151
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "522e23e3e0a04afbb4cb763d886b5f94",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6.8881359832212183,
        "Y": 440.55143021000151
      },
      {
        "ShowGeometry": true,
        "Name": "File From Path",
        "Id": "71f3688a9c5443a3b32f316e72059f94",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11.758126173342589,
        "Y": 281.47248735696246
      },
      {
        "ShowGeometry": true,
        "Name": "List.Transpose",
        "Id": "c31892694b264009a0acb66410e8ae86",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 590.66638068666,
        "Y": 378.01258929592188
      },
      {
        "ShowGeometry": true,
        "Name": "List.RestOfItems",
        "Id": "234222423cf74675a80b48c647480e5c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 400.86360930465889,
        "Y": 375.77082427959897
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "f87f5af7b6f74703b78d0e05714dfdd1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 838.00778748761491,
        "Y": 406.40827950267789
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "b2c166d54e2e47349001b14b51cbacdb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 612.88813598322122,
        "Y": 485.55143021000151
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "0e2cabf895a34e8b987c1dede5e0cd05",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 839.27089597503073,
        "Y": 526.82613516103288
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "c704277c410a45df8705bbf108780528",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 852.22748979990206,
        "Y": 650.40889598805745
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "5880a65430bb481c898de60ba1633232",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 859.23846977813787,
        "Y": 773.99165681508225
      },
      {
        "ShowGeometry": true,
        "Name": "Point.ByCoordinates",
        "Id": "7a152c25d959434d9951f59cb900be51",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1115.9866495116482,
        "Y": 471.41946497604062
      },
      {
        "ShowGeometry": true,
        "Name": "Vector.ByCoordinates",
        "Id": "cdb03ef52f7543dc9ffcd59f165ff582",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1118.9756695334124,
        "Y": 687.37616154847524
      },
      {
        "ShowGeometry": true,
        "Name": "Line.ByStartPointDirectionLength",
        "Id": "3a30f6ad8ad440fbb1048db8ff2544d8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1424.1552892684072,
        "Y": 717.11190402227487
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "b2b1da71ea76430aa2b190d528904ddd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1203.4708968102459,
        "Y": 831.76025529161575
      },
      {
        "ShowGeometry": true,
        "Name": "Curve.RemoveDuplicates",
        "Id": "60cc74b1f7b148eabb1e9029c794dd34",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 551.64864937161849,
        "Y": 1258.3823516145244
      },
      {
        "ShowGeometry": true,
        "Name": "CAD.CurvesFromCADLayers",
        "Id": "f244f0460f56403498ab2854ea3ec7b8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 151.16203258269854,
        "Y": 1264.7722434155612
      },
      {
        "ShowGeometry": true,
        "Name": "Segment Reference Line",
        "Id": "33fa5906554e4fc9b4330380bdd46a65",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -585.88854405898053,
        "Y": 762.58667820122412
      },
      {
        "ShowGeometry": true,
        "Name": "Select Reference Drawing",
        "Id": "1344f08b3eb94fa69669b72811e2d927",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -594.86731019312913,
        "Y": 514.5509541607131
      },
      {
        "ShowGeometry": true,
        "Name": "List.SetDifference",
        "Id": "9498172b730645faa8681b4d931b11eb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1980.6131756127475,
        "Y": 1005.674572426391
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "20b961fd70b4477fbf76d2ce7b2a0c17",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3394.76914889772,
        "Y": 925.67843777692087
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "1cc5ec8da9a14fea8c7b0930516da760",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3625.0859006125656,
        "Y": 928.31448279386484
      },
      {
        "ShowGeometry": true,
        "Name": "Data.ExportExcel",
        "Id": "bdc0871141f545918d37d619543cd7d4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4840.3008503350156,
        "Y": 538.816064227449
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "a87edeeab96040499a33e9c91a2ff6f1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4055.4072399548431,
        "Y": 568.67904071254111
      },
      {
        "ShowGeometry": true,
        "Name": "List Create",
        "Id": "35e169827f0a482a8cc8346a25a07770",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3935.2548390199972,
        "Y": 944.19151718867806
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "d00b3fa0e4eb4f7fb2ae51ff310c860a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4054.4136941753795,
        "Y": 683.94762057710261
      },
      {
        "ShowGeometry": true,
        "Name": "List.Transpose",
        "Id": "8eef182b819e44a0869e794ee8df5ec7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4119.3042671977209,
        "Y": 915.391988505404
      },
      {
        "ShowGeometry": true,
        "Name": "List.AddItemToFront",
        "Id": "8416b13d1b8c4c71aced3bb258c5c883",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4557.3342036917156,
        "Y": 713.23981472584035
      },
      {
        "ShowGeometry": true,
        "Name": "List Create",
        "Id": "619b3c3483534506873855fc4d9341ae",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4208.0235600828382,
        "Y": 753.49891859811976
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "0611c2f6bdf84bdf959ba79d7b4021c0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 979.88328066972531,
        "Y": 1018.7414488873026
      },
      {
        "ShowGeometry": true,
        "Name": "Curve.RemoveDuplicates",
        "Id": "1c54985181704641bb0de3a10b839fbf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 559.33555569163832,
        "Y": 1021.634186335657
      },
      {
        "ShowGeometry": true,
        "Name": "CAD.CurvesFromCADLayers",
        "Id": "93a5324019d04b5eb8d00cb2ef84b3b1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 158.84893890271923,
        "Y": 1028.024078136697
      },
      {
        "ShowGeometry": true,
        "Name": "Intersect Line with Reference",
        "Id": "2954355ab07242aeb1eec0d6ecde5481",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -585.88854405898053,
        "Y": 695.206561595332
      },
      {
        "ShowGeometry": true,
        "Name": "Curve.IntersectAll",
        "Id": "5714a81b7208468fb7851dbe0299afda",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1277.2733325639347,
        "Y": 1024.8963490614935
      },
      {
        "ShowGeometry": true,
        "Name": "Curve.IntersectAll",
        "Id": "2520e2a6025a4205928bb3ec13b70d15",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1730.6985263941933,
        "Y": 1119.1444779049491
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "442be450261e46ff81bbd3881db3de17",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 982.96729782371131,
        "Y": 1248.1100723600221
      },
      {
        "ShowGeometry": true,
        "Name": "List.AddItemToEnd",
        "Id": "fab82ae26f8542f596ced2c3263e8b35",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1259.9183347445928,
        "Y": 1198.4772700444516
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "987687951f5043e38d07c55427ea2365",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1513.0456265540001,
        "Y": 1174.6535249329781
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "fa9302c5a7d44e7d9830aa50a9139b7b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4317.7649772623336,
        "Y": 477.79261738155549
      },
      {
        "ShowGeometry": true,
        "Name": "Export",
        "Id": "67b6ff391b3f471faba5d1474345b216",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -594.86731019312913,
        "Y": 286.41060434303665
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "bebf11c609d247f4844012075b27da59",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4125.3572927946288,
        "Y": 1112.0049467204688
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "c299584798a840bdbb0c72b6d4ebbbf7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4350.375194039385,
        "Y": 1114.2419599657569
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "8b992cddc2bc40d989949104f1b8938b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4557.2428829673927,
        "Y": 1113.4652942144214
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "c0ac71a5ac8541e2a3ba483a1f2e21af",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -599.08754021408674,
        "Y": 117.25917543535502
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "1344c16ec634402c8f6cfec402f75db2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2292.3462468993139,
        "Y": 1530.4482985527161
      },
      {
        "ShowGeometry": true,
        "Name": "Geometry.DistanceTo",
        "Id": "d0e26b8e0fb346e88e13d51d84f3e777",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3545.4247762204704,
        "Y": 1039.2399650739792
      },
      {
        "ShowGeometry": true,
        "Name": "Is InnerEdge?",
        "Id": "b3aa513f0c4d41bfa92c4c9de246b51d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -595.71135619732058,
        "Y": 223.49864644406782
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "99184e5fa5454cd1b97ce0cc71884ae0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3378.3839013827946,
        "Y": 716.09972962959694
      },
      {
        "ShowGeometry": true,
        "Name": "Data.ImportExcel",
        "Id": "261702e5293f4a10a9f282d0ff8980f7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3743.0291703328767,
        "Y": 276.35575777997792
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "1740c521be984122ab9f33c91ae09b31",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3623.573222377333,
        "Y": 420.19512138852031
      },
      {
        "ShowGeometry": true,
        "Name": "List.FirstItem",
        "Id": "7469503b9962442c93203809cfb02979",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4086.0696837173573,
        "Y": 299.60837353182035
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "45580d522793460083a7b124a9e7eee2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4324.0078755965569,
        "Y": 311.75840886182186
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "2f38ac87c69d49b78f6e2094bc6726ad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2231.4379003730619,
        "Y": 1012.0984239312281
      },
      {
        "ShowGeometry": true,
        "Name": "Curve.RemoveDuplicates",
        "Id": "c79db6dffa954b0e9c8db8476daa4b14",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 532.84608121425208,
        "Y": 1481.5648581990636
      },
      {
        "ShowGeometry": true,
        "Name": "CAD.CurvesFromCADLayers",
        "Id": "5cd7e4cf496d4328b565e7f1fa8ea290",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 132.35946442533316,
        "Y": 1487.9547500001036
      },
      {
        "ShowGeometry": true,
        "Name": "PlacementCurve",
        "Id": "c3de72aaf1fe42db8540716e938b74bf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -574.83945490659255,
        "Y": 850.24298067834661
      },
      {
        "ShowGeometry": true,
        "Name": "PolyCurve.ByJoinedCurves",
        "Id": "5729df159ce4463787f6eda25cdaae9a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 967.47472657849767,
        "Y": 1758.1864467075266
      },
      {
        "ShowGeometry": true,
        "Name": "Curve.IntersectAll",
        "Id": "7062e0edf7e94508a19744a14d92b9b7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1306.1008241262448,
        "Y": 1610.820585959669
      },
      {
        "ShowGeometry": true,
        "Name": "List.AddItemToEnd",
        "Id": "4307405504cb46d9bb167e7709116675",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1299.0496754432295,
        "Y": 1399.5348829524914
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "3e1b8198d4f14b66943d33d42ca1c8af",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 991.43058294772572,
        "Y": 1499.3511259561881
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "390bf38a5e8c45048a8b2a1b7672a1cf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1573.245677655065,
        "Y": 1401.8142034446596
      },
      {
        "ShowGeometry": true,
        "Name": "Curve.IntersectAll",
        "Id": "160afff69e9f49d28b08e84d24b69b40",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1833.8246642931601,
        "Y": 1411.6120738109623
      },
      {
        "ShowGeometry": true,
        "Name": "List.SetDifference",
        "Id": "6dfb4e540a5344f2aff00e460c7ee625",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2068.88193711624,
        "Y": 1504.078118287993
      },
      {
        "ShowGeometry": true,
        "Name": "List.SortByKey",
        "Id": "588c2ff96ed344c49d2e2406e3f9fdab",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2984.7725352094503,
        "Y": 1216.9452562483882
      },
      {
        "ShowGeometry": true,
        "Name": "Curve.ParameterAtPoint",
        "Id": "acb0e3f31b334fcdad4cfca140d1c8b7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2508.0726185440844,
        "Y": 1417.5153297998486
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "42df284bfdc64e12b7d7a8381b0c0630",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2732.0631535955167,
        "Y": 1420.3961488588618
      }
    ],
    "Annotations": [
      {
        "Id": "6266b095dcfd46539e7b92fb7f9c21b2",
        "Title": "Layer Name",
        "Nodes": [
          "33fa5906554e4fc9b4330380bdd46a65",
          "2954355ab07242aeb1eec0d6ecde5481"
        ],
        "Left": -595.88854405898053,
        "Top": 642.206561595332,
        "Width": 213.0,
        "Height": 188.38011660589211,
        "FontSize": 36.0,
        "InitialTop": 695.206561595332,
        "InitialHeight": 217.90065232269683,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": 299.46358242030692,
    "Y": -29.328310337041103,
    "Zoom": 0.545683366916263
  }
}