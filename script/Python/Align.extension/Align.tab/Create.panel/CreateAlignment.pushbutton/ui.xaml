<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Alignment Manager" SizeToContent="Height" Width="800" ShowInTaskbar="True" Topmost="True"
        WindowStartupLocation="CenterScreen" HorizontalContentAlignment="Center">
    <TabControl>
        <TabItem>
            <TabItem.Header>
                <TextBlock Text="General"/>
            </TabItem.Header>
            <Grid Height="400">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.4*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="0">
                        <Label Content="Start Station" Margin="5"/>
                        <Label Content="End Station" Margin="5"/>
                        <Label Content="Alignment Name" Margin="5"/>
                    </StackPanel>
                    <StackPanel Grid.Column="1">
                        <TextBox x:Name="stationStart" Margin="10" PreviewTextInput="NumberValidationTextBox"/>
                        <TextBox x:Name="stationEnd" Margin="10" PreviewTextInput="NumberValidationTextBox"/>
                        <TextBox x:Name="alignmentname" Text="Alignment" Margin="10"/>
                    </StackPanel>
                </Grid>
            </Grid>
        </TabItem>
        <TabItem>
            <TabItem.Header>
                <TextBlock Text="Horizontal Alignment"/>
            </TabItem.Header>
            <Grid Height="600">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="0.4*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="0.5*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="0.3*"/>
                </Grid.ColumnDefinitions>
                <DataGrid x:Name="HorizontalAlignmentTable"
                          Grid.Row="0" ColumnWidth="*" Grid.ColumnSpan="2"
                          ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto"
                          HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"
                          AutoGenerateColumns="False" IsReadOnly="True">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Index" Binding="{Binding Index}" IsReadOnly="True" />
                        <DataGridTextColumn Header="Curve Type" Binding="{Binding CurveType}"/>
                        <DataGridTextColumn Header="Start Station" Binding="{Binding StartStation}"/>
                        <DataGridTextColumn Header="End Station" Binding="{Binding EndStation}"/>
                        <DataGridTextColumn Header="Length" Binding="{Binding Length}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Direction" Binding="{Binding Direction}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Radius" Binding="{Binding Radius}"/>
                    </DataGrid.Columns>
                </DataGrid>
                <StackPanel Grid.Row="1" Grid.Column="0"
                            Orientation="Horizontal"
                            Margin="10">
                    <Button Content="Select Alignment" Click="selectHorzAlignment" Width="100" Margin="0,0,10,0"/>
                    <Button Content="Delete" Width="100" Margin="0,0,10,0" IsEnabled="False"/>
                    <Button Content="Reverse Table" x:Name="Btn_HorzReverse" Click="ReverseHrozTable" Width="100" Margin="0,0,10,0" IsEnabled="False"/>
                </StackPanel>
                <Button Grid.Row="1" Grid.Column="1" x:Name="Refresh" Click="refreshHroz" Content="Refresh" Margin="10" IsEnabled="False"/>
                <Grid Grid.Row="2" Grid.Column="0" x:Name="Grd_PointBy" IsEnabled="False">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.5*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <RadioButton Grid.Row="0" Grid.Column="0" x:Name="Btn_PBC"
                                 VerticalAlignment="Center"
                                 GroupName="PointMethod" Checked="Btn_PBC_Checked">
                        Point By Curve
                    </RadioButton>
                    <RadioButton Grid.Row="1" Grid.Column="0" x:Name="Btn_PBI"
                                 VerticalContentAlignment="Center"
                                 GroupName="PointMethod" Checked="Btn_PBI_Checked">
                        Point By Interval
                    </RadioButton>
                    <Button Grid.Row="0" Grid.Column="1" x:Name="PBC_Btn" Content="Select Model Curves" Margin="10"
                            Click="BtnClk_PBC"/>
                    <TextBox Grid.Row="1" Grid.Column="1" x:Name="PBI_Interval" Margin="10"
                             PreviewTextInput="NumberValidationTextBox" TextChanged="CalculateNumOfPoints"/>
                    <Label Grid.Row="0" Grid.Column="2" x:Name="NumIntCrv" Content="Selected Number of Curves"/>
                    <Label Grid.Row="1" Grid.Column="2" x:Name="Pts_Num" Content="Number of Points"/>
                </Grid>
                <Button Grid.Row="2" Grid.Column="1" Content="Find Point on Alignment" x:Name="Btn_FindPts"
                        Click="Clk_FindPts" Margin="10" IsEnabled="False"/>
                <DataGrid x:Name="HorizontalPointsTable"
                          Grid.Row="3" ColumnWidth="*" Grid.ColumnSpan="1"
                          ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto"
                          HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"
                          AutoGenerateColumns="False" IsReadOnly="True">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Index" Binding="{Binding Index}" IsReadOnly="True" />
                        <DataGridTextColumn Header="Station" Binding="{Binding Station}"/>
                        <DataGridTextColumn Header="Revit ID" Binding="{Binding RevitID}"/>
                        <DataGridTextColumn Header="Is Loaded" Binding="{Binding IsLoaded}"/>
                    </DataGrid.Columns>
                </DataGrid>
                <Button Grid.Row="3" Grid.Column="1" Content="Create Horizontal Alignment"
                        Click="CreatePoint" Margin="10"/>
                <TextBox x:Name="Log_Horizontal" Grid.Row="4" Grid.Column="0" TextWrapping="Wrap"
                IsReadOnly="True" VerticalScrollBarVisibility="Visible"/>
                <Grid Grid.Row="4" Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0" Content="Import" Margin="10,5,5,5"/>
                    <Button Grid.Column="1" Content="Export" Margin="5,5,10,5"/>
                </Grid>
            </Grid>
        </TabItem>
        <TabItem>
            <TabItem.Header>
                <TextBlock Text="Vertical Alignment"/>
            </TabItem.Header>
            <Grid Height="600">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="0.4*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="0.1*"/>
                    <RowDefinition Height="0.8*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="0.4*"/>
                </Grid.ColumnDefinitions>
                <DataGrid x:Name="VerticalCurveTable"
                          Grid.Row="0" ColumnWidth="*" Grid.ColumnSpan="1"
                          ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto"
                          HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"
                          AutoGenerateColumns="False" IsReadOnly="False">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Index" Binding="{Binding index}" IsReadOnly="True" />
                        <DataGridTextColumn Header="PVI Station" Binding="{Binding pviStation}"/>
                        <DataGridTextColumn Header="PVI Elevation" Binding="{Binding pviElevation}"/>
                        <DataGridTextColumn Header="Grade" Binding="{Binding grade}"/>
                        <DataGridTextColumn Header="Curve Type" Binding="{Binding _CurveType}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Curve Length" Binding="{Binding _CurveLength}"/>
                        <DataGridTextColumn Header="Value K" Binding="{Binding _K}" IsReadOnly="True"/>
                    </DataGrid.Columns>
                </DataGrid>
                <Border Grid.Row="1" Grid.ColumnSpan="3" Margin="10" BorderBrush="LightGray" BorderThickness="1">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <Button Content="Import" Click="ImportVertical" Width="100" Margin="10,5"/>
                        <Button Content="Remove Row" Click="removeRow" Width="100" Margin="10,5"/>
                        <Button Content="Calculate Rows" Width="100" Margin="5" Click="calculateRows"/>
                        <Button Content="Clear Row" Click="clearRow" Width="100" Margin="10,5"/>
                        <Button Content="Add Row" Click="addrow" Width="100" Margin="10,5"/>
                    </StackPanel>
                </Border>
                <TextBox x:Name="Log_Vertical" Grid.Row="5" Grid.ColumnSpan="1" TextWrapping="Wrap" Margin="10"
                         IsReadOnly="True" VerticalScrollBarVisibility="Visible"/>
                <Button Grid.Row="4" Grid.Column="1" Content="Export" Margin="10" Height="50"/>
                <Grid Grid.Row="0" Grid.Column="1" Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.5*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="0.1*"/>
                        <ColumnDefinition Width="0.5*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Curve Type" VerticalAlignment="Center" TextWrapping="Wrap" 
                                   Grid.Column="0" Grid.Row="0" FontSize="8"/>
                    <TextBlock x:Name="inputText1" Text="PVI Station Start" VerticalAlignment="Center" TextWrapping="Wrap"
                                   Grid.Column="0" Grid.Row="1" FontSize="8"/>
                    <TextBlock x:Name="inputText2" Text="PVI Station End" VerticalAlignment="Center" TextWrapping="Wrap"
                                   Grid.Column="3" Grid.Row="1" FontSize="8"/>
                    <TextBlock x:Name="inputText3" Text="PVI Elevation Start" VerticalAlignment="Center" TextWrapping="Wrap"
                                   Grid.Column="0" Grid.Row="2" FontSize="8"/>
                    <TextBlock x:Name="inputText4" Text="PVI Elevation End" VerticalAlignment="Center" TextWrapping="Wrap"
                                   Grid.Column="3" Grid.Row="2" FontSize="8"/>
                    <TextBlock x:Name="inputText5" Text="Line Slope" VerticalAlignment="Center" TextWrapping="Wrap"
                                   Grid.Column="0" Grid.Row="3" FontSize="8"/>
                    <ComboBox x:Name="input_curveType" Text="Curve Type" VerticalAlignment="Center" 
                                   Grid.Column="1" Grid.ColumnSpan="4" Grid.Row="0"
                                   SelectionChanged="valueUpdated" SelectedIndex="0"/>
                    <TextBox x:Name="inputValue1" VerticalAlignment="Center" HorizontalAlignment="Stretch"
                                   Grid.Column="1" Grid.Row="1" TextChanged="input1Updated"/>
                    <TextBox x:Name="inputValue2" VerticalAlignment="Center" HorizontalAlignment="Stretch"
                                   Grid.Column="4" Grid.Row="1"/>
                    <TextBox x:Name="inputValue3" VerticalAlignment="Center" HorizontalAlignment="Stretch"
                                 Grid.Column="1" Grid.Row="2" TextChanged="inputValue34Updated"/>
                    <TextBox x:Name="inputValue4" VerticalAlignment="Center" HorizontalAlignment="Stretch"
                                 Grid.Column="4" Grid.Row="2" TextChanged="inputValue34Updated"/>
                    <TextBox x:Name="inputValue5" VerticalAlignment="Center" HorizontalAlignment="Stretch"
                                   Grid.Column="1" Grid.Row="3" TextChanged="input3Updated"/>
                </Grid>
                <DataGrid x:Name="VerticalPointsTable"
                          Grid.Row="2" ColumnWidth="*" Grid.ColumnSpan="1"
                          ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto"
                          HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"
                          AutoGenerateColumns="False" IsReadOnly="True">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Index" Binding="{Binding Index}" IsReadOnly="True" />
                        <DataGridTextColumn Header="Station" Binding="{Binding Station}"/>
                        <DataGridTextColumn Header="Elevation" Binding="{Binding Elevation}"/>
                        <DataGridTextColumn Header="Revit ID" Binding="{Binding RevitID}"/>
                        <DataGridTextColumn Header="Is Loaded" Binding="{Binding IsLoaded}"/>
                    </DataGrid.Columns>
                </DataGrid>
                <Grid Grid.Row="2" Grid.Column="1" x:Name="MenuVerticalPoint" Margin="10" IsEnabled="False">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Button x:Name="Btn_VertRefresh" Grid.Row="1" Content="Refresh" Margin="5"
                            Click="VertRefresh" IsEnabled="False"/>
                    <Button Content="Select Alignment" Grid.Row="0" Margin="5"
                            Click="SelectAlignment"/>
                    <Button Content="Calculate Elevation" Grid.Row="2" Margin="5"
                            Click="CalculateElevation"/>
                    <Button Content="Update Alignment" Grid.Row="3" Margin="5"
                            Click="LoadHorizontalPoints"/>
                </Grid>
            </Grid>
        </TabItem>
        <TabItem>
            <TabItem.Header>
                <TextBlock Text="Edit Alignment"/>
            </TabItem.Header>
            <Grid Height="600">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="0.65*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="0.5*"/>
                </Grid.ColumnDefinitions>
                <DataGrid x:Name="SuperElevationTable" Grid.Row="0" Grid.Column="0" Margin="10"
                          ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto"
                          HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"
                          AutoGenerateColumns="False">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Index" Binding="{Binding Index}"/>
                        <DataGridTextColumn Header="Station" Binding="{Binding Station}"/>
                        <DataGridTextColumn Header="Slope" Binding="{Binding Slope}"/>
                    </DataGrid.Columns>
                </DataGrid>
                <DataGrid Grid.Row="1" Grid.Column="0" Margin="10" x:Name="GeneralPointTable"
                          ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto"
                          HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"
                          AutoGenerateColumns="False" SelectedCellsChanged="ViewDetailTable">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Index" Binding="{Binding Index}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Name" Binding="{Binding Name}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Number" Binding="{Binding Number}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="IsLoaded" Binding="{Binding IsLoaded}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Offset (mm)" Binding="{Binding Offset}" IsReadOnly="True"/>
                        <DataGridCheckBoxColumn Header="IsLineReference" Binding="{Binding LineReference}" x:Name="ChkBoxCol" IsReadOnly="False"/>
                    </DataGrid.Columns>
                </DataGrid>
                <DataGrid Grid.Row="2" Grid.Column="0" Margin="10" x:Name="DetailPointTable"
                          ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto"
                          HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"
                          AutoGenerateColumns="False" IsReadOnly="True">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Index" Binding="{Binding Index}"/>
                        <DataGridTextColumn Header="Name" Binding="{Binding Name}"/>
                        <DataGridTextColumn Header="Station (m)" Binding="{Binding Station}"/>
                        <DataGridTextColumn Header="Elevation (m)" Binding="{Binding Elevation}"/>
                        <DataGridTextColumn Header="Slope (%)" Binding="{Binding Slope}"/>
                        <DataGridTextColumn Header="Offset (mm)" Binding="{Binding Offset}"/>
                        <DataGridTextColumn Header="ID" Binding="{Binding ID}"/>
                        <DataGridTextColumn Header="IsLoaded" Binding="{Binding IsLoaded}"/>
                    </DataGrid.Columns>
                </DataGrid>
                <TextBox Grid.Row="3" Grid.Column="0" Margin="10"
                         x:Name="Log_Edit"/>
                <Grid Grid.Row="0" Grid.Column="1" Grid.RowSpan="4">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1.5*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="1.5*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Button Grid.Row="0" Grid.ColumnSpan="2" Margin="10"
                                Content="Add" Click="Clk_AddSuperElevation"/>
                        <Label Grid.Row="1" Grid.Column="0" Content="Station" Margin="10,0,10,0"/>
                        <TextBox Grid.Row="1" Grid.Column="1" Margin="10,5,10,5" HorizontalAlignment="Stretch"
                                 x:Name="Txt_StationInput" PreviewTextInput="NumberValidationTextBox"/>
                        <Label Grid.Row="2" Grid.Column="0" Content="Slope" Margin="10,0,10,0"/>
                        <TextBox Grid.Row="2" Grid.Column="1" Margin="10,5,10,5" HorizontalAlignment="Stretch"
                                 x:Name="Txt_SlopeInput" PreviewTextInput="NumberValidationTextBox"/>
                        <Button Grid.Row="3" Grid.ColumnSpan="2" Content="Remove" Margin="10"
                                Click="Clk_RemoveSuperElevation"/>
                    </Grid>
                    <Grid Grid.Row="1" Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Button Grid.Row="0" Margin="10"
                            Content="Select Alignment" Click="Clk_SelectFullAlignment"/>
                        <Button Grid.Row="1" Margin="10"
                            Content="Refresh" IsEnabled="False"
                            x:Name="Btn_RefreshEdit" Click="Clk_RefreshEdit"/>
                    </Grid>
                    <Grid Grid.Row="2" Grid.RowSpan="2" Grid.Column="1"
                          x:Name="Grd_AddExtraPoint" IsEnabled="False">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Label Grid.Row="0" Margin="10,5,10,5"
                            Content="Point Set Name"/>
                        <TextBox Grid.Row="0" Grid.Column="1" x:Name="PT_Name" Margin="10,5,10,5"/>
                        <RadioButton Grid.Row="1" Grid.Column="0" VerticalAlignment="Center"
                                     x:Name="RBtn_AlignmentNormal" GroupName="PjtMethod" Margin="10,0,0,0" IsChecked="True">
                            <RadioButton.Content>
                                <TextBlock Text="Alignment Normal Direction" TextWrapping="Wrap"/>
                            </RadioButton.Content>
                        </RadioButton>
                        <RadioButton Grid.Row="1" Grid.Column="1" VerticalAlignment="Center"
                                     x:Name="RBtn_PointNormal" GroupName="PjtMethod" Margin="10,0,0,0" IsEnabled="False">
                            <RadioButton.Content>
                                <TextBlock Text="Point Rotation Direction" TextWrapping="Wrap"/>
                            </RadioButton.Content>
                        </RadioButton>
                        <RadioButton Grid.Row="2" Grid.Column="0" VerticalAlignment="Center"
                                     GroupName="IntMethod" x:Name="RBtn_Line" Margin="10,0,0,0">
                            Line Intersection
                        </RadioButton>
                        <Button Grid.Row="2" Grid.Column="1" Content="Select Curve Set"
                                Margin="10,5,10,5" Click="clk_SelectCurveSet"/>
                        <RadioButton Grid.Row="3" Grid.Column="0" VerticalAlignment="Center"
                                     GroupName="IntMethod" x:Name="RBtn_Offset" Margin="10,0,0,0">
                            Equal Offset
                        </RadioButton>
                        <TextBox Grid.Row="3" Grid.Column="1" Margin="10,5,10,5" PreviewTextInput="NumberValidationTextBox"/>
                        <Button Grid.Row="4" Grid.ColumnSpan="2" Content="Add to Table" x:Name="Btn_AddTable"
                                Margin="10,5,10,5" IsEnabled="False" Click="Clk_AddExtraToTable"/>
                        <Button Grid.Row="5" Grid.ColumnSpan="2" Content="Update to Alignment Model"
                                Margin="10,5,10,5" IsEnabled="False" Click="Clk_UpdateModel" x:Name="Btn_UpdateFamily"/>
                    </Grid>
                </Grid>
            </Grid>
        </TabItem>
    </TabControl>
</Window>
    
