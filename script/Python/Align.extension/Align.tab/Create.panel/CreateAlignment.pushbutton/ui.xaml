<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Alignment Manager" SizeToContent="Height" Width="800" ShowInTaskbar="True" Topmost="True"
        WindowStartupLocation="CenterScreen" HorizontalContentAlignment="Center">
    <TabControl>
        <TabItem>
            <TabItem.Header>
                <TextBlock Text="General"/>
            </TabItem.Header>
            <Grid Height="400">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.4*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="0">
                        <Label Content="Start Station" Margin="5"/>
                        <Label Content="End Station" Margin="5"/>
                    </StackPanel>
                    <StackPanel Grid.Column="1">
                        <TextBox x:Name="stationStart" Margin="10" />
                        <TextBox x:Name="stationEnd" Margin="10" />
                    </StackPanel>
                </Grid>
            </Grid>
        </TabItem>
        <TabItem>
            <TabItem.Header>
                <TextBlock Text="Horizontal Alignment"/>
            </TabItem.Header>
            <Grid Height="600">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="0.4*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="0.5*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="0.3*"/>
                </Grid.ColumnDefinitions>
                <DataGrid x:Name="HorizontalAlignmentTable"
                          Grid.Row="0" ColumnWidth="*" Grid.ColumnSpan="2"
                          ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto"
                          HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"
                          AutoGenerateColumns="False" IsReadOnly="False">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Index" Binding="{Binding Index}" IsReadOnly="True" />
                        <DataGridTextColumn Header="Curve Type" Binding="{Binding CurveType}"/>
                        <DataGridTextColumn Header="Start Station" Binding="{Binding StartStation}"/>
                        <DataGridTextColumn Header="End Station" Binding="{Binding EndStation}"/>
                        <DataGridTextColumn Header="Length" Binding="{Binding Length}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Direction" Binding="{Binding Direction}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Radius" Binding="{Binding Radius}"/>
                    </DataGrid.Columns>
                </DataGrid>
                <StackPanel Grid.Row="1" Grid.Column="0"
                            Orientation="Horizontal"
                            Margin="10">
                    <Button Content="Select Alignment" Click="selectHorzAlignment" Width="100" Margin="0,0,10,0"/>
                    <Button Content="Delete" Width="100" Margin="0,0,10,0"/>
                    <Button Content="Reverse Table" Width="100" Margin="0,0,10,0"/>
                </StackPanel>
                <Button Grid.Row="1" Grid.Column="1" Click="refreshHroz" Content="Refresh" Margin="10"/>
                <Grid Grid.Row="2" Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.5*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <RadioButton Grid.Row="0" Grid.Column="0"
                                 VerticalAlignment="Center"
                                 GroupName="PointMethod">
                        Point By Curve
                    </RadioButton>
                    <RadioButton Grid.Row="1" Grid.Column="0"
                                 VerticalContentAlignment="Center"
                                 GroupName="PointMethod" IsChecked="True">
                        Point By Interval
                    </RadioButton>
                    <Button Grid.Row="0" Grid.Column="1" Content="Select Model Curves" Margin="10"/>
                    <TextBox Grid.Row="1" Grid.Column="1" x:Name="PBI_Interval" PreviewTextInput="NumberValidationTextBox"/>
                    <Label Grid.Row="0" Grid.Column="2" Content="Selected Number of Curves"/>
                    <Label Grid.Row="1" Grid.Column="2" x:Name="PBI_Num" Content="Number of Points"/>
                </Grid>
                <Button Grid.Row="2" Grid.Column="1" Content="Find Point on Alignment"
                        Margin="10"/>
                <DataGrid x:Name="SegmentTable"
                          Grid.Row="3" ColumnWidth="*" Grid.ColumnSpan="1"
                          ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto"
                          HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"
                          AutoGenerateColumns="False" IsReadOnly="False">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Index" Binding="{Binding index_horizontal}" IsReadOnly="True" />
                        <DataGridTextColumn Header="Station" Binding="{Binding station}"/>
                        <DataGridTextColumn Header="Revit ID" Binding="{Binding revitId}"/>
                        <DataGridTextColumn Header="Is Loaded" Binding="{Binding isLoaded}"/>
                    </DataGrid.Columns>
                </DataGrid>
                <Button Grid.Row="3" Grid.Column="1" Content="To Revit"
                        Margin="10"/>
                <TextBox x:Name="HorizontalLog" Grid.Row="4" Grid.Column="0" TextWrapping="Wrap"
                         IsReadOnly="True" VerticalScrollBarVisibility="Visible"/>
                <Grid Grid.Row="4" Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0" Content="Import" Margin="10,5,5,5"/>
                    <Button Grid.Column="1" Content="Export" Margin="5,5,10,5"/>
                </Grid>
            </Grid>
        </TabItem>
        <TabItem>
            <TabItem.Header>
                <TextBlock Text="Vertical Alignment"/>
            </TabItem.Header>
            <Grid Height="400">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="0.4*"/>
                    <RowDefinition Height="2*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <DataGrid x:Name="VerticalCurveTable"
                          Grid.Row="0" ColumnWidth="*" Grid.ColumnSpan="2"
                          ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto"
                          HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"
                          AutoGenerateColumns="False" IsReadOnly="False">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Index" Binding="{Binding index}" IsReadOnly="True" />
                        <DataGridTextColumn Header="PVI Station" Binding="{Binding pviStation}"/>
                        <DataGridTextColumn Header="PVI Elevation" Binding="{Binding pviElevation}"/>
                        <DataGridTextColumn Header="Grade" Binding="{Binding grade}"/>
                        <DataGridTextColumn Header="Curve Type" Binding="{Binding _CurveType}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Curve Length" Binding="{Binding _CurveLength}"/>
                        <DataGridTextColumn Header="Value K" Binding="{Binding _K}" IsReadOnly="True"/>
                    </DataGrid.Columns>
                </DataGrid>
                <Border Grid.Row="1" Grid.Column="0" Margin="0,10,0,0" BorderBrush="LightGray" BorderThickness="1">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <Button Content="Add Row" Click="addrow" Width="80" Margin="10,5"/>
                        <Button Content="Clear Row" Click="clearRow" Width="80" Margin="10,5"/>
                        <Button Content="Remove Row" Click="removeRow" Width="80" Margin="10,5"/>
                        <Button Content="Calculate Rows" Width="100" Margin="5" Click="calculateRows"/>
                    </StackPanel>
                </Border>
                <Button Content="Check Row" Click="examineRow" Width="100" Height="30" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="2"/>
                <TextBox x:Name="debug" Grid.Row="2" Grid.ColumnSpan="1" TextWrapping="Wrap" Margin="10,150,10,10"
                         IsReadOnly="True" VerticalScrollBarVisibility="Visible"/>
                <Border BorderBrush="LightGray" BorderThickness="1"
                    Grid.Row="1" Grid.RowSpan="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="10" Padding="5">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.5*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="0.5*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Curve Type" VerticalAlignment="Center" TextWrapping="Wrap" 
                                   Grid.Column="0" Grid.Row="0"/>
                        <TextBlock x:Name="inputText1" Text="PVI Station Start" VerticalAlignment="Center" TextWrapping="Wrap"
                                   Grid.Column="0" Grid.Row="1"/>
                        <TextBlock x:Name="inputText2" Text="PVI Station End" VerticalAlignment="Center" TextWrapping="Wrap"
                                   Grid.Column="2" Grid.Row="1"/>
                        <TextBlock x:Name="inputText3" Text="PVI Elevation Start" VerticalAlignment="Center" TextWrapping="Wrap"
                                   Grid.Column="0" Grid.Row="2"/>
                        <TextBlock x:Name="inputText4" Text="PVI Elevation End" VerticalAlignment="Center" TextWrapping="Wrap"
                                   Grid.Column="2" Grid.Row="2"/>
                        <TextBlock x:Name="inputText5" Text="Line Slope" VerticalAlignment="Center" TextWrapping="Wrap"
                                   Grid.Column="0" Grid.Row="3"/>

                        <ComboBox x:Name="input_curveType" Text="Curve Type" VerticalAlignment="Center" 
                                   Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="0" SelectionChanged="valueUpdated" SelectedIndex="0"/>
                        <TextBox x:Name="inputValue1" VerticalAlignment="Center" HorizontalAlignment="Left" Width="100"
                                   Grid.Column="1" Grid.Row="1" TextChanged="input1Updated"/>
                        <TextBox x:Name="inputValue2" VerticalAlignment="Center" HorizontalAlignment="Left" Width="100"
                                   Grid.Column="3" Grid.Row="1"/>
                        <TextBox x:Name="inputValue3" VerticalAlignment="Center" HorizontalAlignment="Left" Width="100"
                                 Grid.Column="1" Grid.Row="2" TextChanged="inputValue34Updated"/>
                        <TextBox x:Name="inputValue4" VerticalAlignment="Center" HorizontalAlignment="Left" Width="100"
                                 Grid.Column="3" Grid.Row="2" TextChanged="inputValue34Updated"/>
                        <TextBox x:Name="inputValue5" VerticalAlignment="Center" HorizontalAlignment="Left" Width="100"
                                   Grid.Column="1" Grid.Row="3" TextChanged="input3Updated"/>
                    </Grid>
                </Border>
            </Grid>
        </TabItem>
        <TabItem>
            <TabItem.Header>
                <TextBlock Text="External Data"/>
            </TabItem.Header>
            <StackPanel Height="400">
                <WrapPanel>
                    <Button Content="Select File Path" Margin="10" Width="200" Height="30" Click="selectFile" ClickMode="Release" />
                    <Label x:Name="path" Margin="10" Height="30" Content="File Path :" FontSize="15" VerticalAlignment="Center"/>
                </WrapPanel>
                <ListView x:Name="sheetList" Margin="10" Height="100"/>
                <Button Content="Import Data from Selected Sheet" Height="30" Margin="10" Click="importSheetData" ClickMode="Release"/>
                <TextBox x:Name="debug_external" TextWrapping="Wrap" Margin="10" IsReadOnly="True" VerticalScrollBarVisibility="Visible"/>
            </StackPanel>
        </TabItem>
    </TabControl>
</Window>
    
